/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Dialogs;

import MQApi.Enums.LogType;
import MQApi.Enums.QueueType;
import MQApi.Logs.LogWriter;
import MQApi.PCF.MQPCF;
import MQApi.QueryModel.MQCommandResult;
import MQApi.Utilities.MQUtility;
import UI.Helpers.IconManager;
import UI.Models.TableListObject;
import com.ibm.mq.MQException;
import com.ibm.mq.MQQueueManager;
import com.ibm.mq.constants.MQConstants;
import com.ibm.mq.headers.MQDataException;
import com.ibm.mq.headers.pcf.PCFException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jzhou
 */
public class ClearMessagesDialog extends DialogBase {

    /**
     * Creates new form ClearMessages
     */
    public ClearMessagesDialog(java.awt.Frame parent, boolean modal, MQQueueManager queueManager, TableListObject selectedObject) {
        super(parent, modal,queueManager,selectedObject);
        initComponents();
        initCustomProperties();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ClearButtonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        QueueManagerNameLabel = new javax.swing.JLabel();
        QueueNameLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ClearCommandRadioButton = new javax.swing.JRadioButton();
        MQGETRadioButton = new javax.swing.JRadioButton();
        ForceRadioButton = new javax.swing.JRadioButton();
        StringFilterLabel = new javax.swing.JLabel();
        StringFilterTextField = new javax.swing.JTextField();
        ClearButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Queue manager name:");
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 25));

        jLabel2.setText("Queue name:");
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 25));

        QueueManagerNameLabel.setPreferredSize(new java.awt.Dimension(300, 25));

        QueueNameLabel.setPreferredSize(new java.awt.Dimension(300, 25));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Select clear type"));
        jPanel1.setPreferredSize(new java.awt.Dimension(471, 230));

        ClearButtonGroup.add(ClearCommandRadioButton);
        ClearCommandRadioButton.setSelected(true);
        ClearCommandRadioButton.setText("Queue will be cleared using CLEAR command");
        ClearCommandRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ClearCommandRadioButtonStateChanged(evt);
            }
        });

        ClearButtonGroup.add(MQGETRadioButton);
        MQGETRadioButton.setText("Queue will be cleared using MQGET API calls");

        ClearButtonGroup.add(ForceRadioButton);
        ForceRadioButton.setText("Queue will be cleared by force (open get follow by MQGET calls)");

        StringFilterLabel.setText("Only clear messages with string :");
        StringFilterLabel.setPreferredSize(new java.awt.Dimension(150, 25));

        StringFilterTextField.setPreferredSize(new java.awt.Dimension(250, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(StringFilterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StringFilterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClearCommandRadioButton)
                            .addComponent(MQGETRadioButton)
                            .addComponent(ForceRadioButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClearCommandRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MQGETRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ForceRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StringFilterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StringFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        ClearButton.setText("Clear");
        ClearButton.setPreferredSize(new java.awt.Dimension(100, 25));
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        CloseButton.setText("Close");
        CloseButton.setPreferredSize(new java.awt.Dimension(100, 25));
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QueueManagerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QueueNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QueueManagerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QueueNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomProperties(){
        this.setTitle("Clear message");
        this.setIconImage(iconManager.DeleteMessageIcon().getImage());   
        String queueManagerName = "";
        try {
            queueManagerName = queueManager.getName();
        } catch (MQException ex) {
            //LogWriter.WriteToLog(ex.getMessage(), LogType.Error);
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
        this.QueueManagerNameLabel.setText(queueManagerName);
        this.QueueNameLabel.setText(selectedObject.ObjectName);   
        this.StringFilterTextField.setVisible(false);
        this.StringFilterTextField.setText("");
        this.StringFilterLabel.setVisible(false);
    }
    
    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        Close();
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
       if(ClearCommandRadioButton.isSelected()){
           boolean isAlias = (QueueType)selectedObject.Type == QueueType.Alias;
           MQCommandResult result = MQPCF.ClearQueue(queueManager, selectedObject.ObjectName,isAlias);
           if(result.QuerySuccess){
               FireActionEvent();
               JOptionPane.showMessageDialog(this, "Queue has been cleared", "Success", JOptionPane.INFORMATION_MESSAGE);
               Close();               
           }
           else{
               JOptionPane.showMessageDialog(this, result.ErrorMessage, "Error", JOptionPane.ERROR_MESSAGE);
           }           
       }
       else if(MQGETRadioButton.isSelected()){
            String stringFilter = this.StringFilterTextField.getText();
            destoryMessagePerform(ParentJFrame, false ,queueManager, selectedObject, false, stringFilter);
       }
       else if(ForceRadioButton.isSelected()){
            String stringFilter = this.StringFilterTextField.getText();
            destoryMessagePerform(ParentJFrame, false ,queueManager, selectedObject, true, stringFilter);
       }
       else{
           JOptionPane.showMessageDialog(this, "Please select an option");
       }
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void ClearCommandRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ClearCommandRadioButtonStateChanged
        if(ClearCommandRadioButton.isSelected()){
            this.StringFilterTextField.setVisible(false);
            this.StringFilterTextField.setText("");
            this.StringFilterLabel.setVisible(false);
        }
        else{
            this.StringFilterTextField.setVisible(true);
            this.StringFilterLabel.setVisible(true);            
        }
    }//GEN-LAST:event_ClearCommandRadioButtonStateChanged
    
    private void destoryMessagePerform(java.awt.Frame parent, boolean modal, MQQueueManager queueManager, TableListObject selectedObject, boolean forceOpenGet, String stringFilter){
        //DestoryMessagesDialog dialog = new DestoryMessagesDialog(ParentJFrame, false ,queueManager, selectedObject, forceOpenGet);
        DestoryMessagesDialog dialog = new DestoryMessagesDialog(ParentJFrame, false ,queueManager, selectedObject, forceOpenGet, stringFilter);
        dialog.AddDialogActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                FireActionEvent();
                Close();
            }
        });
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.ButtonGroup ClearButtonGroup;
    private javax.swing.JRadioButton ClearCommandRadioButton;
    private javax.swing.JButton CloseButton;
    private javax.swing.JRadioButton ForceRadioButton;
    private javax.swing.JRadioButton MQGETRadioButton;
    private javax.swing.JLabel QueueManagerNameLabel;
    private javax.swing.JLabel QueueNameLabel;
    private javax.swing.JLabel StringFilterLabel;
    private javax.swing.JTextField StringFilterTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
