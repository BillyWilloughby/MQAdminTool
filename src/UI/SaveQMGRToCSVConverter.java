/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import static UI.Dialogs.BackupRestoreMessageDialog.Usage_SaveMsgContent;
import UI.Dialogs.DialogBase;
import UI.Helpers.MQCommandParser;
import java.awt.Component;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jzhou
 */
public class SaveQMGRToCSVConverter extends DialogBase {
    
    private File[] inputfiles;
    /**
     * Creates new form SaveQMGRToCSVConverter
     */
    public SaveQMGRToCSVConverter(java.awt.Frame parent, boolean modal) {
        super(parent, modal, null, null);
        initComponents();
        this.ProgressBar.setStringPainted(true);
        this.setTitle("SaveQmgr to CSV converter");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        InputSelectButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SelectionList = new javax.swing.JList();
        CloseButton = new javax.swing.JButton();
        OkButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        OutputSelectButton = new javax.swing.JButton();
        outputTextField = new javax.swing.JTextField();
        ProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 400));
        setResizable(false);

        jLabel1.setText("Please select SaveQmgr files :");
        jLabel1.setPreferredSize(new java.awt.Dimension(300, 25));

        InputSelectButton.setText("Select");
        InputSelectButton.setPreferredSize(new java.awt.Dimension(100, 25));
        InputSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputSelectButtonActionPerformed(evt);
            }
        });

        SelectionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(SelectionList);

        CloseButton.setText("Close");
        CloseButton.setPreferredSize(new java.awt.Dimension(100, 25));
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        OkButton.setText("Convert");
        OkButton.setPreferredSize(new java.awt.Dimension(100, 25));
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Please select output csv files :");
        jLabel2.setPreferredSize(new java.awt.Dimension(300, 25));

        OutputSelectButton.setText("Select");
        OutputSelectButton.setPreferredSize(new java.awt.Dimension(100, 25));
        OutputSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputSelectButtonActionPerformed(evt);
            }
        });

        outputTextField.setEditable(false);
        outputTextField.setPreferredSize(new java.awt.Dimension(6, 25));

        ProgressBar.setPreferredSize(new java.awt.Dimension(146, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                        .addComponent(InputSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(OkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OutputSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InputSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OutputSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        Close();
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkButtonActionPerformed
        convert();
    }//GEN-LAST:event_OkButtonActionPerformed

    private void InputSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputSelectButtonActionPerformed
        showFileChooser(false);
    }//GEN-LAST:event_InputSelectButtonActionPerformed

    private void OutputSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputSelectButtonActionPerformed
        showFileChooser(true);
    }//GEN-LAST:event_OutputSelectButtonActionPerformed

    private void showFileChooser(boolean isOutPut){
        JFileChooser fileChooser = new JFileChooser();
        if(isOutPut){
             FileFilter filter = new FileNameExtensionFilter("csv file (*.csv)","csv"); 
             fileChooser.setFileFilter(filter);
        };
        fileChooser.setDialogTitle(isOutPut ? "Please select a file" : "Please select files");
        fileChooser.setMultiSelectionEnabled(!isOutPut);
        int returnVal = fileChooser.showDialog(this, "Select");
        if(returnVal == JFileChooser.APPROVE_OPTION){ 
            if(isOutPut){
                outputTextField.setText(fileChooser.getSelectedFile().getPath()); 
                this.OkButton.setEnabled(true);
            }
            else{
                DefaultListModel model = new DefaultListModel();
                inputfiles = fileChooser.getSelectedFiles();
                for(File file : fileChooser.getSelectedFiles()){
                    model.addElement(file.getPath());
                }
                SelectionList.setModel(model);
            }
        }
        else{
            if(isOutPut){
                this.outputTextField.setText("");
            }
            else{
                DefaultListModel model = new DefaultListModel();
                SelectionList.setModel(model);               
            }

        }
    }
    
    private void convert(){
        final String outputPath = outputTextField.getText();
        final Component comp = this;
        if(inputfiles == null || inputfiles.length < 1){
            JOptionPane.showMessageDialog(this, "Please select SaveQmgr files", "Error",JOptionPane.ERROR_MESSAGE );
        }
        else if(outputPath.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please specify output csv file", "Error",JOptionPane.ERROR_MESSAGE );
        }
        else{
            Thread thread = new Thread(new Runnable() {

                @Override
                public void run() {
                    MQCommandParser.ProcessFiles(inputfiles, outputPath, ProgressBar);
                    JOptionPane.showMessageDialog(comp, "Result has been save to " + outputPath , "Success",JOptionPane.INFORMATION_MESSAGE );
                    inprogreas(false);
                    Close();
                }
            });
            inprogreas(true);
            thread.start();
        }             
        
    }
    
    private void inprogreas(boolean inprogress){
        this.InputSelectButton.setEnabled(!inprogress);
        this.OutputSelectButton.setEnabled(!inprogress);
        this.OkButton.setEnabled(!inprogress);
        this.SelectionList.setEnabled(!inprogress);
        
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseButton;
    private javax.swing.JButton InputSelectButton;
    private javax.swing.JButton OkButton;
    private javax.swing.JButton OutputSelectButton;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JList SelectionList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField outputTextField;
    // End of variables declaration//GEN-END:variables
}
